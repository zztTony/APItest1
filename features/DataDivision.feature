@数据分离和查询
Feature: 数据查询和数据分离

  Scenario Outline: 数据的分离和查询
    Given 用例编号<caseID>和用例描述<description>
    When 数据制造: 接口<api1>, api账号<api_cA>, 请求参数<parameter1>, 期望值<expected1>
    Then 数据查询: 接口<api2>, 本api账号, 请求参数<parameter2>, 预期<expected2>
    Then 同空间异api账号<api_cB>查询: 参数同上, 预期<expected3>
    Then 同租户异空间的api账号<api_cC>查询: 参数同上, 预期<expected4>
    Then 异租户的api账号<api_cD>查询: 参数同上, 预期<expected5>

    @设备注册和数据分离
    Examples: 设备注册
      | caseID  | description           | api1                                                                                   | api_cA                                                                            | parameter1                                                                   | expected1                      | api2                                                                              | parameter2                                                                                                                                       | expected2                                         | api_cB                                                                            | expected3                                         | api_cC                                                                            | expected4                                         | api_cD                                                                            | expected5                                         |
      | 数据分离001 | 设备数据分离: 设备(一体机)注册和查询  | {"接口名": "设备注册", "请求方法": "POST", "url": r"/aiot-device/v1/mac/api/kas/device-register"} | {"api_key": "ugp1zdjvhfsht16a", "api_secret": "0eb9trdq29yj8q7ruc0nrokm4obstd7s"} | {"deviceId": "0120100016c0aa04a00", "productId": "61b1beb3d256694905d12221"} | {"code": 200, "msg": "设备注册成功"} | {"接口名": "设备查询", "请求方法": "GET", "url": r"/aiot-device/v1/mac/api/kas/device-list"} | {"deviceId": "0120100016c0aa04a00", "deviceType": "AIO_MACHINE", "uid": "", "current": 1, "size": None, "productId": "61b1beb3d256694905d12221"} | {"code": 200, "msg": "设备列表查询成功", "totalCount": 1} | {"api_key": "98h35f4e50xoe6m4", "api_secret": "k30oyz58fb7j0sfx4iaqa8n0s3vmiivj"} | {"code": 200, "msg": "设备列表查询成功", "totalCount": 1} | {"api_key": "150qw761lcolwssc", "api_secret": "b9vrjzvg1dorejp1d4rw1ad7rr3mknx8"} | {"code": 200, "msg": "设备列表查询成功", "totalCount": 0} | {"api_key": "uafpktjevv9pebcl", "api_secret": "nvs1gb3lct3fxy4ji4xzarxs7zt3nwxc"} | {"code": 200, "msg": "设备列表查询成功", "totalCount": 0} |
      | 数据分离002 | 设备数据分离: 设备(门禁盒子)注册和查询 | {"接口名": "设备注册", "请求方法": "POST", "url": r"/aiot-device/v1/mac/api/kas/device-register"} | {"api_key": "ugp1zdjvhfsht16a", "api_secret": "0eb9trdq29yj8q7ruc0nrokm4obstd7s"} | {"deviceId": "FF185F0F", "productId": "61cab99ed93bdf084033a1a3"}            | {"code": 200, "msg": "设备注册成功"} | {"接口名": "设备查询", "请求方法": "GET", "url": r"/aiot-device/v1/mac/api/kas/device-list"} | {"deviceId": "FF185F0F", "deviceType": "ENTRANCE_BOX", "uid": "", "current": 1, "size": None, "productId": "61cab99ed93bdf084033a1a3"}           | {"code": 200, "msg": "设备列表查询成功", "totalCount": 1} | {"api_key": "98h35f4e50xoe6m4", "api_secret": "k30oyz58fb7j0sfx4iaqa8n0s3vmiivj"} | {"code": 200, "msg": "设备列表查询成功", "totalCount": 1} | {"api_key": "150qw761lcolwssc", "api_secret": "b9vrjzvg1dorejp1d4rw1ad7rr3mknx8"} | {"code": 200, "msg": "设备列表查询成功", "totalCount": 0} | {"api_key": "uafpktjevv9pebcl", "api_secret": "nvs1gb3lct3fxy4ji4xzarxs7zt3nwxc"} | {"code": 200, "msg": "设备列表查询成功", "totalCount": 0} |


    Examples: 数据的制造和查询
      | caseID  | description         | api1                                                                                   | api_cA                                                                            | parameter1                                                                                                                                                                                                                                                                                                                                                                                       | expected1                        | api2                                                                                       | parameter2                                                                                                            | expected2                                           | api_cB                                                                            | expected3                                           | api_cC                                                                            | expected4                                           | api_cD                                                                            | expected5                                           |
      | 数据分离003 | 指令数据分离: 指令下发和查询     | {"接口名": "指令下发", "请求方法": "POST", "url": r"/aiot-device/v1/mac/api/kas/dispatch-tasks"}  | {"api_key": "ugp1zdjvhfsht16a", "api_secret": "0eb9trdq29yj8q7ruc0nrokm4obstd7s"} | [{"tag": "展示时长设置2秒", "deviceId": "0120100016c0aa02a00", "deviceName": "设备002", "name": "展示时长设置的指令", "instruction": "2002", "instruParams": {"time": 2}, "sendType": "http"}]                                                                                                                                                                                                                     | {"code": 200, "msg": "指令下发成功"}   | {"接口名": "指令查询", "请求方法": "GET", "url": r"/aiot-device/v1/mac/api/kas/find-tasks-status"}    | {"tag": "展示时长设置2秒", "deviceId": "0120100016c0aa02a00", "status": "CREATED", "current": 1, "size": None, "taskId": ""} | {"code": 200, "msg": "指令列表查询成功", "totalCount": 1}   | {"api_key": "98h35f4e50xoe6m4", "api_secret": "k30oyz58fb7j0sfx4iaqa8n0s3vmiivj"} | {"code": 200, "msg": "指令列表查询成功", "totalCount": 1}   | {"api_key": "150qw761lcolwssc", "api_secret": "b9vrjzvg1dorejp1d4rw1ad7rr3mknx8"} | {"code": 200, "msg": "指令列表查询成功", "totalCount": 0}   | {"api_key": "uafpktjevv9pebcl", "api_secret": "nvs1gb3lct3fxy4ji4xzarxs7zt3nwxc"} | {"code": 200, "msg": "指令列表查询成功", "totalCount": 0}   |
      | 数据分离004 | 开门记录数据分离: 开门记录上报和查询 | {"接口名": "开门记录上报", "请求方法": "POST", "url": r"/aiot-paas/v1/door/api/kas/access-records"} | {"api_key": "ugp1zdjvhfsht16a", "api_secret": "0eb9trdq29yj8q7ruc0nrokm4obstd7s"} | {"deviceId": "0120100016c0aa02a00", "ways": ["ID_NUMBER", "FACE", "TEMPE", "IC_CARD"], "time": "2021-11-11 15:00:00", "status": "fail", "inout": "in", "temperature": "37.5", "base64Img": r"C:\Users\ASUS\Desktop\kkk.jpg", "format": "jpg", "personId": "511028199603088888", "personName": "这种人", "uid": "FF185E5E", "riskAssessmentGrade": "10", "guide": "高风险，不能开门", "cardExtension": "5E"} | {"code": 200, "msg": "开门记录上报成功"} | {"接口名": "查询开门记录", "请求方法": "GET", "url": r"/aiot-paas/v1/door/api/kas/sync-access-records"} | {"startTime": "", "endTime": "", "deviceId": "0120100016c0aa02a00", "current": "1", "size": ""}                       | {"code": 200, "msg": "开门记录列表查询成功", "totalCount": 1} | {"api_key": "98h35f4e50xoe6m4", "api_secret": "k30oyz58fb7j0sfx4iaqa8n0s3vmiivj"} | {"code": 200, "msg": "开门记录列表查询成功", "totalCount": 1} | {"api_key": "150qw761lcolwssc", "api_secret": "b9vrjzvg1dorejp1d4rw1ad7rr3mknx8"} | {"code": 200, "msg": "开门记录列表查询成功", "totalCount": 0} | {"api_key": "uafpktjevv9pebcl", "api_secret": "nvs1gb3lct3fxy4ji4xzarxs7zt3nwxc"} | {"code": 200, "msg": "开门记录列表查询成功", "totalCount": 0} |
